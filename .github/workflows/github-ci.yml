on:
  push:
    branches:
      - main
jobs:
  BuildDockerImage:
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: checkout
        uses: actions/checkout@v3
      - name: Login to docker 
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Build
        run: |
          docker build --target node -t ${{secrets.DOCKER_REGISRY}}:$SHORT_SHA .
          docker push ${{secrets.DOCKER_REGISRY}}:$SHORT_SHA
  Deploy:
    runs-on: front-runner
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: Login to docker 
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Deploy
        run: |
          docker-compose -f docker-compose.prod.yml up -d
          docker image prune -af
        
        
        # run: docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} -p ${{ secrets.DOCKER_REGISTRY_TOKEN }} ${{ secrets.DOCKER_REGISRY }}
      # - name: pull and run docker
      #   run: |
      #     ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORKDIR }} && git fetch && git pull && docker-compose build --no-cache && docker-compose up -d && docker image prune -af"
      # - name: cleanup
      #   run: rm -rf ~/.ssh
